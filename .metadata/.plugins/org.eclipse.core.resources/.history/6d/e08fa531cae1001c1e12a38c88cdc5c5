package qlns.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import qlns.model.Employee;
import qlns.repository.EmployeeRepository;

@Service
public class EmployeeServiceImpl implements EmployeeService{
	@Autowired
	private EmployeeRepository employeeRepository;
	@Override
	public List <Employee> getAllEmployees(){
		return employeeRepository.findAll();
	}
	@Override
    public void saveEmployee(Employee employee) {
        this.employeeRepository.save(employee);
    }
	@Override
	public Employee getEmployeeById(long id) {
	    Optional < Employee > optional = employeeRepository.findById(id);
	    Employee employee = null;
	    if (optional.isPresent()) {
	        employee = optional.get();
	    } else {
	        throw new RuntimeException(" Employee not found for id :: " + id);
	    }
	    return employee;
	}
	@Override
	 public void deleteEmployeeById(long id) {
	  this.employeeRepository.deleteById(id);
	 }
	
	@GetMapping("/deleteEmployee/{id}")
	public String deleteEmployee(@PathVariable (value = "id") long id) {
	 
	 // call delete employee method 
	 this.employeeService.deleteEmployeeById(id);
	 return "redirect:/";
	}
}
